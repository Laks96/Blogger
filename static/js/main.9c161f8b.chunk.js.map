{"version":3,"sources":["components/UI/Nav/NavBar.module.scss","components/Layout/GetStarted/GetStarted.module.scss","components/Layout/Sidebar/SideBar.module.scss","components/UI/Card/Card.module.scss","containers/DashBoard/EditPost/EditPost.module.scss","containers/Authorization/LogIn/Login.module.scss","components/UI/Input/Input.module.scss","containers/Authorization/SignUp/SignUp.module.scss","components/Layout/Header/Header.module.css","containers/Authorization/Authorization.module.scss","containers/DashBoard/NewPost/NewPost.module.scss","containers/DashBoard/MyPosts/MyPostItem/MyPostItem.module.scss","components/UI/Button/Button.module.css","containers/Posts/Posts.module.scss","containers/DashBoard/MyPosts/MyPosts.module.scss","assets/images/authorization.svg","assets/images/articleImg.jpg","assets/images/user.svg","containers/ReadPost/ReadPost.module.scss","components/Layout/OurStory/OurStory.module.scss","containers/DashBoard/DashBoard.module.scss","assets/images/addPost.svg","assets/images/bloggerLogo.svg","assets/images/myArticles.svg","assets/images/discover.svg","assets/images/logout.svg","assets/images/edit.svg","components/UI/Modal/Modal.module.scss","assets/images/heart.svg","assets/images/dashboard.svg","components/UI/Button/Button.js","components/UI/Nav/Nav.js","components/Layout/GetStarted/GetStarted.js","components/Layout/Header/Header.js","components/UI/Input/Input.js","services/axios.js","models/Post.js","store/action/actionCreators/authorization.js","store/action/actionTypes.js","containers/Authorization/LogIn/LogIn.js","containers/Authorization/SignUp/SignUp.js","containers/Authorization/Authorization.js","components/UI/Card/Card.js","containers/Posts/Posts.js","store/action/actionCreators/posts.js","containers/ReadPost/ReadPost.js","components/Layout/OurStory/OurStory.js","containers/PublicMain.js","components/Layout/Sidebar/SideBar.js","containers/DashBoard/DashBoard.js","containers/DashBoard/NewPost/NewPost.js","containers/Authorization/Logout/Logout.js","containers/DashBoard/MyPosts/MyPostItem/MyPostItem.js","containers/DashBoard/MyPosts/MyPosts.js","components/UI/Modal/Modal.js","containers/DashBoard/EditPost/EditPost.js","containers/PrivateMain.js","App.js","serviceWorker.js","store/reducers/post.js","store/reducers/auth.js","index.js"],"names":["module","exports","Button","props","classNames","classes","className","disabled","push","join","onClick","clicked","children","NavBar","state","toogleClass","toogleNavBar","setState","prevState","routes","item","this","navLink","to","isAuth","navBar","navBtn","rotate","default","btnBox","style","transform","navigation","display","navigationList","React","Component","connect","auth","token","GetStarted","getStartedBox","id","getStarted","register","round","link","create","discover","Header","header","infoBox","homeText","spy","smooth","duration","homePageBtn","Nav","Input","inputClasses","isValid","touched","invalid","inputElement","elementType","elementConfig","value","onChange","changed","options","map","option","key","displayValue","vadlidationError","valueType","inputBox","Label","label","error","http","axios","baseURL","headers","localStorage","getItem","Post","postData","isPublic","photo","imageUrl","title","subTitle","subtitle","text","userId","fav","loginSucces","type","logout","removeItem","checkAuthTimeout","dispatch","setTimeout","userList","userData","get","then","res","data","filter","user","email","setItem","LogIn","inputHandler","event","inputIdentifier","updatedAuth","target","valid","chechkValidity","test","length","loginHandler","preventDefault","onLogin","password","placeholder","validation","required","console","log","onError","config","form","formElement","logIn","onSubmit","logInText","errorHandler","logInBtn","switcher","onSwitch","loginData","post","expirationDate","Date","getTime","accessToken","catch","loginFail","response","message","action","SignUp","lastName","firstName","trim","onSignUpHandler","signUpData","name","onSignUp","updatedForm","shoudBeValidate","history","signIn","signInText","signInBtn","withRouter","signUpFail","Authorization","switchLogger","switchLog","switchlog","authorization","imageBox","authImg","src","authorizationImg","alt","authForm","Card","cardImg","includes","card","imgBox","textBox","readMore","profileImgBox","Posts","posts","fetchPosts","articleContainer","fetchedPosts","allPosts","loading","results","err","ReadPost","match","params","onReadPost","readPost","singlePost","OurStory","ourStory","PublicMain","exact","path","component","SideBar","vh","window","innerHeight","height","sideBar","logoBox","bloggerLogo","menuContainer","iconBox","addPost","myArticles","DashBoard","mainWrapper","NewPost","updatedNewPostForm","newPostForm","checkValidity","formIsValid","onSubmitForm","image","sendNewPost","newPost","newPostElement","formInput","btnContainer","newPostFail","Logout","onLogout","MyPostItem","myposts","postItem","editPost","edit","MyPosts","getPosts","noPosts","myPostInfo","textDecoration","myPosts","fetchMyPostsFail","Modal","modal","show","EditPost","updatedEditPostForm","editPostForm","updatePostHandler","sid","showModal","deletePostHandler","deletePost","active","put","delete","PrivateMain","App","authCheck","Boolean","location","hostname","initialState","updatedPosts","favouritePosts","reducer","composeEnhancers","__REDUX_DEVTOOLS_EXTENSION_COMPOSE__","compose","rootReducer","combineReducers","postReducer","authReducer","store","createStore","applyMiddleware","thunk","ReactDOM","render","document","getElementById","navigator","serviceWorker","ready","registration","unregister"],"mappings":"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","file":"static/js/main.9c161f8b.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"navBar\":\"NavBar_navBar__1fVmf\",\"navBtn\":\"NavBar_navBtn__1sHft\",\"rotate\":\"NavBar_rotate__3YqLg\",\"default\":\"NavBar_default__1RWnW\",\"btnBox\":\"NavBar_btnBox__3svuc\",\"navigation\":\"NavBar_navigation__2eGIm\",\"navigationList\":\"NavBar_navigationList__1W3VG\",\"item\":\"NavBar_item__1sa2m\",\"navLink\":\"NavBar_navLink__3wLA1\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"getStarted\":\"GetStarted_getStarted__1Lqqd\",\"round\":\"GetStarted_round__1fPpE\",\"getStartedBox\":\"GetStarted_getStartedBox__2RTX4\",\"link\":\"GetStarted_link__1WgHV\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"sideBar\":\"SideBar_sideBar__1OBPZ\",\"logoBox\":\"SideBar_logoBox__3pldu\",\"iconBox\":\"SideBar_iconBox__1jxB4\",\"menuContainer\":\"SideBar_menuContainer__14Oyh\",\"navLink\":\"SideBar_navLink__3I1LR\",\"logoutBox\":\"SideBar_logoutBox__2Tiny\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"card\":\"Card_card__3LEDq\",\"imgBox\":\"Card_imgBox__3ZEDa\",\"infoBox\":\"Card_infoBox__3_Lhc\",\"readMore\":\"Card_readMore__1m8HF\",\"likeBox\":\"Card_likeBox__L2YAK\",\"profileImgBox\":\"Card_profileImgBox__3BF3C\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"editPostForm\":\"EditPost_editPostForm__3ozSt\",\"formInput\":\"EditPost_formInput__3fuP6\",\"btnContainer\":\"EditPost_btnContainer__2o36O\",\"disabled\":\"EditPost_disabled__1rRWq\",\"active\":\"EditPost_active__1xKRj\",\"header\":\"EditPost_header__2uy1X\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"logIn\":\"Login_logIn__K7S_x\",\"logInBtn\":\"Login_logInBtn__13Ez0\",\"switcher\":\"Login_switcher__z4sO0\",\"logInText\":\"Login_logInText__1QFT7\",\"errorHandler\":\"Login_errorHandler__1IQWv\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"inputBox\":\"Input_inputBox__2rAl4\",\"Input\":\"Input_Input__3hA06\",\"invalid\":\"Input_invalid__1Nk-8\",\"error\":\"Input_error__9R48g\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"signIn\":\"SignUp_signIn__U0PjI\",\"signInBtn\":\"SignUp_signInBtn__2aSfr\",\"switcher\":\"SignUp_switcher__2EVdK\",\"signInText\":\"SignUp_signInText__1Jn2d\",\"errorHandler\":\"SignUp_errorHandler__2Z2iZ\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"header\":\"Header_header__2zI9C\",\"homeText\":\"Header_homeText__3_OjI\",\"moveInLeft\":\"Header_moveInLeft__DHaVo\",\"homePageBtn\":\"Header_homePageBtn__9J4_k\",\"moveOnTop\":\"Header_moveOnTop__lOztl\",\"infoBox\":\"Header_infoBox__2Ssfj\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"authorization\":\"Authorization_authorization__JPz1C\",\"authForm\":\"Authorization_authForm__2BHSQ\",\"imageBox\":\"Authorization_imageBox__q4r0G\",\"authImg\":\"Authorization_authImg__1wTiE\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"newPostForm\":\"NewPost_newPostForm__3UpzU\",\"formInput\":\"NewPost_formInput__R9ilo\",\"btnContainer\":\"NewPost_btnContainer__2lS5r\",\"header\":\"NewPost_header__2tBVH\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"postItem\":\"MyPostItem_postItem__24pDr\",\"title\":\"MyPostItem_title__slLrK\",\"editPost\":\"MyPostItem_editPost__2HoX9\",\"myposts\":\"MyPostItem_myposts__zA1Ub\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"Button\":\"Button_Button__2piU3\",\"disabled\":\"Button_disabled__2KL_K\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"articleContainer\":\"Posts_articleContainer__1822J\",\"title\":\"Posts_title__2EqtG\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"noPosts\":\"MyPosts_noPosts__1Wf-7\"};","module.exports = __webpack_public_path__ + \"static/media/authorization.f7f12d8b.svg\";","module.exports = __webpack_public_path__ + \"static/media/articleImg.8266fe12.jpg\";","module.exports = __webpack_public_path__ + \"static/media/user.d6f07d77.svg\";","// extracted by mini-css-extract-plugin\nmodule.exports = {\"readPost\":\"ReadPost_readPost__1hwe8\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"ourStory\":\"OurStory_ourStory__1XW7M\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"mainWrapper\":\"DashBoard_mainWrapper__TImRq\"};","module.exports = __webpack_public_path__ + \"static/media/addPost.6b7af617.svg\";","module.exports = __webpack_public_path__ + \"static/media/bloggerLogo.7a8ed3a3.svg\";","module.exports = __webpack_public_path__ + \"static/media/myArticles.79da3a53.svg\";","module.exports = __webpack_public_path__ + \"static/media/discover.8fa6a50b.svg\";","module.exports = __webpack_public_path__ + \"static/media/logout.c84b307b.svg\";","module.exports = __webpack_public_path__ + \"static/media/edit.42cb05bb.svg\";","// extracted by mini-css-extract-plugin\nmodule.exports = {\"modal\":\"Modal_modal__et5Td\"};","module.exports = __webpack_public_path__ + \"static/media/heart.76e61100.svg\";","module.exports = __webpack_public_path__ + \"static/media/dashboard.7b252b1c.svg\";","\r\nimport React from 'react'\r\nimport classes from './Button.module.css'\r\n\r\n\r\nconst Button = (props) => {\r\n\r\n    const classNames = [classes.Button,  props.className]\r\n\r\n    if(props.disabled) {\r\n        classNames.push(classes.disabled)\r\n    }\r\n\r\n    return <button disabled = {props.disabled} className = {classNames.join(' ')} onClick = {props.clicked}>{props.children}</button>\r\n}\r\n\r\nexport default Button","import React from 'react'\r\nimport classes from './NavBar.module.scss'\r\nimport { Link, NavLink } from 'react-router-dom'\r\nimport Button from '../Button/Button'\r\nimport { connect } from 'react-redux'\r\n\r\nclass NavBar extends React.Component {\r\n    state = {\r\n        toogleClass: false\r\n    }\r\n\r\n    toogleNavBar = () => {\r\n     \r\n        this.setState(prevState => ({\r\n            toogleClass: !prevState.toogleClass\r\n        }))\r\n    }\r\n\r\n\r\n\r\n    render() {\r\n\r\n        let routes = (<>\r\n          \r\n            <li className={classes.item}>  <Link onClick = {this.toogleNavBar} className={classes.navLink} to='/authorization'>Log In </Link></li>\r\n            <li className={classes.item}> <Link onClick = {this.toogleNavBar}className={classes.navLink} to='/posts'>Articles </Link></li>\r\n            <li className={classes.item}> <Link onClick = {this.toogleNavBar}className={classes.navLink} to='/our-story'>Our Story </Link></li>\r\n            <li className={classes.item}>  <Link onClick = {this.toogleNavBar} className={classes.navLink} to='/'>Home</Link></li>\r\n           \r\n        </>)\r\n\r\n        if (this.props.isAuth) {\r\n            routes = (\r\n                <>\r\n\r\n                    <li className={classes.item}> <Link onClick = {this.toogleNavBar}className={classes.navLink} to='/new-post'>New Post </Link></li>\r\n                    <li className={classes.item}> <Link onClick = {this.toogleNavBar}className={classes.navLink} to='/my-posts'>My Posts </Link></li>\r\n                    <li className={classes.item}> <Link onClick = {this.toogleNavBar}className={classes.navLink} to='/posts'>Discover</Link></li>\r\n                    <li className={classes.item}> <Link onClick = {this.toogleNavBar}className={classes.navLink} to='/logout'> Logout</Link></li>\r\n\r\n                </>\r\n            )\r\n        }\r\n\r\n\r\n        return (\r\n            <>\r\n\r\n                <div className={classes.navBar}>\r\n                    <Button clicked={this.toogleNavBar} className={classes.navBtn}>\r\n                        <div className={this.state.toogleClass ? classes.rotate : classes.default}></div>\r\n                        <div className={this.state.toogleClass ? classes.rotate : classes.default}></div>\r\n                        <div className={this.state.toogleClass ? classes.rotate : classes.default}></div>\r\n\r\n                    </Button>\r\n\r\n                    <div className={classes.btnBox} style={this.state.toogleClass ? { transform: 'scale(80)' } : null}>\r\n\r\n                    </div>\r\n\r\n                    <nav className={classes.navigation} style={!this.state.toogleClass ? { display: 'none' } : null}>\r\n                        <ul className={classes.navigationList} >\r\n                            {routes}\r\n                        </ul>\r\n                    </nav>\r\n\r\n\r\n\r\n\r\n                </div>\r\n\r\n            </>\r\n        )\r\n    }\r\n}\r\nconst mapStateToProps = state => {\r\n    return {\r\n        isAuth: state.auth.token\r\n    }\r\n}\r\n\r\nexport default connect(mapStateToProps, null)(NavBar)\r\n\r\n","import classes from './GetStarted.module.scss'\r\nimport React from 'react'\r\nimport {Link} from 'react-router-dom'\r\n\r\n\r\nconst GetStarted = (props) => {\r\n\r\n    return (\r\n        <>\r\n            <div className={classes.getStartedBox}  id = 'get-started'>\r\n                <h1>Get Started</h1>\r\n                <section className={classes.getStarted}>\r\n\r\n\r\n                    <div className={classes.register}>\r\n                        <div className={classes.round}>\r\n                            <p>1</p>\r\n                        </div>\r\n\r\n                        <h3>Create Account</h3>\r\n\r\n                        <p>\r\n                            Create an account for free and start writing today! Show the world what's on your mind\r\n                            and be one of the thousand successful bloggers. So, what are you waiting for?\r\n                   </p>\r\n                        <Link className = {classes.link} to='/authorization'>\r\n                            <span>Click Here to Register!</span>\r\n                        </Link>\r\n                    </div>\r\n\r\n                    <div className={classes.create}>\r\n                        <div className={classes.round}>\r\n                            <p>2</p>\r\n                        </div>\r\n                        <h3>Start Writing</h3>\r\n\r\n                        <p>\r\n                            Login and start creating something interesting. Write about tech, coding, entrepreneurship, nature... You can even write about your cat :). You can write about anything.\r\n                   </p>\r\n\r\n                   <Link className = {classes.link} to='/authorization'>\r\n                            <span>Click Here to Login!</span>\r\n                        </Link>\r\n\r\n\r\n\r\n                    </div>\r\n\r\n                    <div className={classes.discover}>\r\n                        <div className={classes.round}>\r\n                            <p>3</p>\r\n                        </div>\r\n                        <h3>Discover</h3>\r\n\r\n                        <p>You don't like to write? Nevermind, you don't need an account for reading things from other people. So, what are you waiting for? Start discovering the world of bloggers.</p>\r\n                        <Link className = {classes.link} to='/posts'>\r\n                            <span>Start Discovering!</span>\r\n                        </Link>\r\n                    </div>\r\n\r\n\r\n                </section>\r\n            </div>\r\n\r\n\r\n        </>\r\n    )\r\n}\r\n\r\n\r\nexport default GetStarted","\r\nimport React from 'react'\r\nimport classes from './Header.module.css'\r\nimport Button from '../../UI/Button/Button'\r\nimport { Link } from 'react-scroll'\r\nimport NavBar from '../../UI/Nav/Nav'\r\nimport GetStarted from '../GetStarted/GetStarted'\r\n\r\nconst Header = (props) => {\r\n\r\n    return <> <header className={classes.header}>\r\n        <div className={classes.infoBox}>\r\n            <p className={classes.homeText}>\r\n                Share something what's <br /> on your mind.\r\n        </p>\r\n            <Link to = 'get-started' spy={true} smooth={true} duration={1000}>  <Button className={classes.homePageBtn}>Get started</Button></Link>\r\n\r\n        </div>\r\n        <NavBar/>\r\n\r\n    </header>\r\n\r\n    <GetStarted />\r\n\r\n\r\n\r\n    </>\r\n\r\n}\r\n\r\nexport default Header","\r\nimport React from 'react'\r\nimport classes from './Input.module.scss';\r\n\r\n\r\nconst Input = (props) => {\r\n    const inputClasses = [classes.Input, props.className];\r\n\r\n\r\n    if (props.isValid && props.touched) {\r\n        inputClasses.push(classes.invalid)\r\n    }\r\n\r\n\r\n    let inputElement = null;\r\n    switch (props.elementType) {\r\n        case ('input'):\r\n            inputElement = <input\r\n                className={inputClasses.join(' ')}\r\n                {...props.elementConfig}\r\n                value={props.value}\r\n                onChange={props.changed} />\r\n\r\n            break;\r\n        case ('textarea'):\r\n            inputElement = <textarea\r\n                className={inputClasses.join(' ')}\r\n                {...props.elementConfig}\r\n                value={props.value}\r\n                onChange={props.changed}>\r\n                </textarea>\r\n            break;\r\n        case ('select'):\r\n            inputElement = (\r\n                <select\r\n                    className={inputClasses.join(' ')}\r\n                    value={props.value}\r\n                    onChange={props.changed}>\r\n                    {props.elementConfig.options.map(option => (\r\n                        <option key={option.value} value={option.value}>\r\n                            {option.displayValue}\r\n                        </option>\r\n                    ))}\r\n                </select>\r\n            );\r\n            break;\r\n        default:\r\n            inputElement = <input\r\n                className={inputClasses.join(' ')}\r\n                {...props.elementConfig}\r\n                value={props.value}\r\n                onChange={props.changed} />;\r\n    }\r\n    let vadlidationError = null;\r\n    if (props.isValid && props.touched) {\r\n        vadlidationError = `Please input a valid ${props.valueType}`;\r\n\r\n    }\r\n\r\n    return (\r\n\r\n        <div className={classes.inputBox}>\r\n            <label className={classes.Label}>{props.label}</label>\r\n            {inputElement}\r\n            <span className={classes.error}>{vadlidationError}</span>\r\n        </div>\r\n     \r\n    );\r\n\r\n\r\n}\r\n\r\n\r\n\r\n\r\n\r\n\r\nexport default Input;","import axios from 'axios'\r\n\r\n\r\nconst http = axios.create({\r\n    baseURL: 'https://crud-api.hypetech.xyz/v1/',\r\n    headers: {\r\n        'Content-Type': 'application/json',\r\n        'x-api-key': 'B1tD3V',\r\n       'Authorization': `Bearer ${localStorage.getItem('token')}` \r\n\r\n\r\n    }\r\n});\r\n\r\nexport default http","\r\nclass Post {\r\n    constructor(postData) {\r\n        this.id = postData.id\r\n        this.isPublic = postData.isPublic\r\n        this.photo = postData.imageUrl\r\n        this.title = postData.title\r\n        this.subTitle = postData.subtitle\r\n        this.text = postData.text\r\n        this.userId = postData.userId\r\n        this.fav = false\r\n    }\r\n  \r\n}\r\n\r\nexport default Post","\r\nimport * as actionTypes from '../actionTypes'\r\nimport axios from '../../../services/axios'\r\n\r\n\r\nexport const loginStart = () => {\r\n    return {\r\n        type: actionTypes.LOGIN_START\r\n    }\r\n}\r\nexport const loginSucces = (token) => {\r\n    return {\r\n        type: actionTypes.LOGIN_SUCCESS,\r\n        token: token\r\n    }\r\n}\r\n\r\nexport const loginFail = (error) => {\r\n    return {\r\n        type: actionTypes.LOGIN_FAIL,\r\n        error: error\r\n    }\r\n}\r\n\r\nexport const login = (email, password) => {\r\n    return dispatch => {\r\n        dispatch(loginStart())\r\n\r\n        const loginData = {\r\n            email: email,\r\n            password: password\r\n        }\r\n\r\n        axios.post('auth/login', loginData)\r\n            .then(res => {\r\n      \r\n                const expirationDate = new Date (new Date().getTime() + 3600 * 1000 )\r\n                localStorage.setItem('token', res.data.accessToken)\r\n                localStorage.setItem('expirationDate', expirationDate )\r\n                dispatch(userList(loginData))\r\n                dispatch(checkAuthTimeout())\r\n                dispatch(loginSucces(res.data.accessToken))\r\n            })\r\n            .catch(error => {\r\n \r\n                dispatch(loginFail(error.response.data.message))\r\n            })\r\n    }\r\n}\r\n\r\nexport const signUpStart = () => {\r\n    return {\r\n        type: actionTypes.SIGNUP_START\r\n    }\r\n}\r\n\r\nexport const signUpFail = (error) => {\r\n    return {\r\n        type: actionTypes.SIGNUP_FAIL,\r\n        error: error\r\n\r\n    }\r\n}\r\n\r\nexport const signUpSuccess = (token) => {\r\n    return {\r\n        type: actionTypes.SIGNUP_SUCCESS,\r\n        token: token,\r\n\r\n    }\r\n}\r\n\r\nexport const signUp = (signUpData) => {\r\n    return dispatch => {\r\n\r\n        dispatch(signUpStart())\r\n        axios.post('auth/register', signUpData)\r\n            .then(res => {\r\n                const expirationDate = new Date (new Date().getTime() + 3600 * 1000 )\r\n                localStorage.setItem('expirationDate', expirationDate )\r\n                localStorage.setItem('token', res.data.accessToken)\r\n                dispatch(checkAuthTimeout())\r\n                dispatch(userList(signUpData))\r\n                dispatch(signUpSuccess(res.data.accessToken))\r\n           \r\n\r\n\r\n            })\r\n            .catch(error => {\r\n                dispatch(signUpFail(error.response.data.message))\r\n            })\r\n    }\r\n}\r\n\r\nexport const logout = () => {\r\n    localStorage.removeItem('token')\r\n    localStorage.removeItem('userId')\r\n    localStorage.removeItem('expirationDate')\r\n\r\n    return {\r\n        type: actionTypes.AUTH_LOGOUT\r\n    }\r\n}\r\n\r\nexport const checkAuthTimeout = () => {\r\n    return dispatch => {\r\n        setTimeout(() => {\r\n            dispatch(logout())\r\n        }, 3600 * 1000); //Logout user after 60 minutes.\r\n    }\r\n\r\n}\r\n\r\nexport const checkAuth = () => {\r\n    return dispatch => {\r\n        const token = localStorage.getItem('token')\r\n        const userId = localStorage.getItem('userId')\r\n        if(!token) {\r\n            dispatch(logout())\r\n        }\r\n\r\n        else {\r\n            const expirationDate = new Date(localStorage.getItem('expirationDate'))\r\n\r\n            if(expirationDate > new Date()) {\r\n                dispatch(loginSucces(token))\r\n            }\r\n\r\n            else {\r\n                dispatch(logout())\r\n            }\r\n        }\r\n    }\r\n}\r\n\r\n\r\n\r\n\r\n\r\nexport const userList = (userData) => {\r\n    return dispatch => {\r\n        axios.get('users')\r\n            .then(res => {\r\n                let userId = res.data.filter(user => userData.email === user.email)[0]\r\n           \r\n                if (userId) {\r\n                    localStorage.setItem('userId', userId.id)\r\n                }\r\n            })\r\n    }\r\n}","export const LOGIN_START = 'LOGIN_START'\r\nexport const LOGIN_FAIL = 'LOGIN_FAIL'\r\nexport const LOGIN_SUCCESS = 'LOGIN_SUCCESS'\r\n\r\nexport const SIGNUP_START = 'SIGNUP_START'\r\nexport const SIGNUP_FAIL = 'SIGNUP_FAIL'\r\nexport const SIGNUP_SUCCESS = 'SIGNUP_SUCCESS'\r\n\r\nexport const FETCH_POSTS_SUCCESS = 'FETCH_POSTS_SUCCESS'\r\nexport const FETCH_POSTS_FAIL = 'FETCH_POSTS_FAIL'\r\nexport const FETCH_POSTS_START = 'FETCH_POSTS_START'\r\n\r\nexport const FAVOURITE_POSTS = 'FAVOURITE_POSTS'\r\n\r\nexport const NEW_POST_SUCCESS = 'NEW_POST_SUCCESS'\r\nexport const NEW_POST_START = 'NEW_POST_START'\r\nexport const NEW_POST_FAIL = 'NEW_POST_FAIL'\r\n\r\nexport const FETCH_MYPOSTS_SUCCESS = 'FETCH_MYPOSTS_SUCCESS'\r\nexport const FETCH_MYPOSTS_START = 'FETCH_MYPOSTS_START'\r\nexport const FETCH_MYPOSTS_FAIL = 'FETCH_MYPOSTS_FAIL'\r\n\r\nexport const FETCH_SINGLE_POST = 'FETCH_SINGLE_POST'\r\n\r\nexport const FETCH_SINGLE_POST_START = 'FETCH_SINGLE_POST_START'\r\nexport const FETCH_SINGLE_POST_FAIL = 'FETCH_SINGLE_POST_FAIL'\r\nexport const FETCH_SINGLE_POST_SUCCESS = 'ETCH_SINGLE_POST_SUCCESS'\r\n\r\n\r\n\r\n\r\nexport const AUTH_LOGOUT = 'AUTH_LOGOUT'","import React from 'react'\r\nimport classes from './Login.module.scss'\r\nimport Input from '../../../components/UI/Input/Input'\r\nimport Button from '../../../components//UI/Button/Button'\r\nimport { Redirect } from 'react-router-dom'\r\nimport { connect } from 'react-redux'\r\nimport * as action from '../../../store/action/index'\r\n\r\nclass LogIn extends React.Component {\r\n    constructor(props) {\r\n        super()\r\n        this.state = {\r\n            auth: {\r\n\r\n                email: {\r\n                    elementType: 'input',\r\n                    elementConfig: {\r\n                        type: 'email',\r\n                        placeholder: 'Email adress'\r\n                    },\r\n                    value: '',\r\n                    validation: {\r\n                        required: true\r\n                    },\r\n                    valid: false,\r\n                    touched: false,\r\n\r\n                },\r\n                password: {\r\n                    elementType: 'input',\r\n                    elementConfig: {\r\n                        type: 'password',\r\n                        placeholder: 'Your password'\r\n                    },\r\n                    value: '',\r\n                    validation: {\r\n                        required: true\r\n                    },\r\n                    valid: false,\r\n                    touched: false\r\n\r\n                }\r\n            },\r\n            isAuth: null,\r\n            valid: false,\r\n            touched: false\r\n        }\r\n\r\n    }\r\n    inputHandler = (event, inputIdentifier) => {\r\n        const updatedAuth = {\r\n            ...this.state.auth,\r\n            [inputIdentifier]: {\r\n                ...this.state.auth[inputIdentifier],\r\n                touched: true,\r\n                value: event.target.value,\r\n                valid: this.chechkValidity(inputIdentifier, event.target.value)\r\n\r\n\r\n            }\r\n        }\r\n        this.setState({ auth: updatedAuth })\r\n    }\r\n\r\n    chechkValidity = (inputIdentifier, value) => {\r\n\r\n        let isValid = true\r\n\r\n        const emailCheck = /[a-z0-9!#$%&'*+/=?^_`{|}~-]+(?:\\.[a-z0-9!#$%&'*+/=?^_`{|}~-]+)*@(?:[a-z0-9](?:[a-z0-9-]*[a-z0-9])?\\.)+[a-z0-9](?:[a-z0-9-]*[a-z0-9])?/;\r\n\r\n        if (inputIdentifier === 'email') {\r\n            isValid = emailCheck.test(value) && isValid\r\n        }\r\n\r\n        if (inputIdentifier === 'password') {\r\n            isValid = value.length >= 6 && isValid\r\n        }\r\n\r\n        return isValid\r\n\r\n\r\n\r\n    }\r\n\r\n\r\n\r\n    loginHandler = (event) => {\r\n        event.preventDefault()\r\n        this.props.onLogin(this.state.auth.email.value, this.state.auth.password.value)\r\n    }\r\n\r\n\r\n\r\n    render() {\r\n\r\n        console.log(this.props.onError)\r\n        const updatedAuth = [];\r\n        for (let key in this.state.auth) {\r\n            updatedAuth.push({\r\n                id: key,\r\n                config: this.state.auth[key]\r\n            })\r\n\r\n        }\r\n\r\n        const form = updatedAuth.map(formElement => {\r\n            return <Input\r\n                key={formElement.id}\r\n                changed={(event) => this.inputHandler(event, formElement.id)}\r\n                elementType={formElement.config.elementType}\r\n                elementConfig={formElement.config.elementConfig}\r\n                touched={formElement.config.touched}\r\n                isValid={!formElement.config.valid}\r\n                value={formElement.config.value}\r\n                valueType={formElement.id}\r\n\r\n            />\r\n        })\r\n\r\n        let redirecting = null\r\n\r\n        if (this.props.isAuth) {\r\n            return redirecting = <Redirect to='/new-post' />\r\n        }\r\n\r\n        return <div className={classes.logIn}>\r\n\r\n\r\n            <form onSubmit={this.loginHandler}>\r\n\r\n\r\n                <p className={classes.logInText}>Login</p>\r\n                {form}\r\n                <p className={classes.errorHandler}>{this.props.onError}</p>\r\n                <Button className={classes.logInBtn}>Login</Button>\r\n                <p className={classes.switcher} onClick={this.props.onSwitch}>Don't have an account? Click here to Sign Up!</p>\r\n            </form>\r\n        </div>\r\n    }\r\n\r\n}\r\nconst mapStateToProps = state => {\r\n    return {\r\n        isAuth: state.auth.token,\r\n        onError: state.auth.error\r\n    }\r\n}\r\n\r\nconst mapDispatchToProps = dispatch => {\r\n    return {\r\n        onLogin: (email, password) => dispatch(action.login(email, password))\r\n    }\r\n}\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(LogIn)","import React from 'react'\r\nimport classes from './SignUp.module.scss'\r\nimport Input from '../../../components/UI/Input/Input'\r\nimport Button from '../../../components//UI/Button/Button'\r\nimport {Redirect, withRouter} from 'react-router-dom'\r\nimport NavBar from '../../../components/UI/Nav/Nav'\r\nimport * as action from '../../../store/action/index'\r\nimport {connect} from 'react-redux'\r\n\r\nclass SignUp extends React.Component {\r\n    state = {\r\n        auth: {\r\n\r\n            lastName: {\r\n                elementType: 'input',\r\n                elementConfig: {\r\n                    type: 'text',\r\n                    placeholder: 'First Name'\r\n                },\r\n                value: '',\r\n                validation: {\r\n                    required: true\r\n                },\r\n                valid: false,\r\n                touched: false,\r\n\r\n            },\r\n            firstName: {\r\n                elementType: 'input',\r\n                elementConfig: {\r\n                    type: 'text',\r\n                    placeholder: 'Last Name'\r\n                },\r\n                value: '',\r\n                validation: {\r\n                    required: true\r\n                },\r\n                valid: false,\r\n                touched: false,\r\n\r\n            },\r\n\r\n            email: {\r\n                elementType: 'input',\r\n                elementConfig: {\r\n                    type: 'email',\r\n                    placeholder: 'Email adress'\r\n                },\r\n                value: '',\r\n                validation: {\r\n                    required: true\r\n                },\r\n                valid: false,\r\n                touched: false,\r\n\r\n            },\r\n            password: {\r\n                elementType: 'input',\r\n                elementConfig: {\r\n                    type: 'password',\r\n                    placeholder: 'Your password'\r\n                },\r\n                value: '',\r\n                validation: {\r\n                    required: true\r\n                },\r\n                valid: false,\r\n                touched: false\r\n\r\n            }\r\n            \r\n        },\r\n        isAuth: this.props.isAuth\r\n    }\r\n\r\n    inputHandler = (event, inputIdentifier) => {\r\n        const updatedAuth = {\r\n            ...this.state.auth,\r\n            [inputIdentifier]: {\r\n                ...this.state.auth[inputIdentifier],\r\n                value: event.target.value,\r\n                touched: true,\r\n                valid: this.chechkValidity(inputIdentifier, event.target.value)\r\n            }\r\n        }\r\n\r\n        this.setState({auth: updatedAuth})\r\n    }\r\n\r\n    chechkValidity = (inputIdentifier, value) => {\r\n      \r\n        let isValid = true\r\n\r\n        const emailCheck = /[a-z0-9!#$%&'*+/=?^_`{|}~-]+(?:\\.[a-z0-9!#$%&'*+/=?^_`{|}~-]+)*@(?:[a-z0-9](?:[a-z0-9-]*[a-z0-9])?\\.)+[a-z0-9](?:[a-z0-9-]*[a-z0-9])?/;\r\n        if(inputIdentifier === 'firstName') {\r\n            isValid = value.trim() !== '' && isValid\r\n        }\r\n\r\n        if(inputIdentifier === 'lastName') {\r\n            isValid = value.trim() !== '' && isValid\r\n        }\r\n        if(inputIdentifier === 'email') {\r\n            isValid = emailCheck.test(value) && isValid\r\n        }\r\n\r\n        if(inputIdentifier === 'password') {\r\n            isValid = value.length >= 6 && isValid\r\n        }\r\n\r\n        return isValid\r\n\r\n\r\n\r\n    }\r\n\r\n    onSignUpHandler = (event) => {\r\n        event.preventDefault()\r\n        const signUpData = {\r\n            name: this.state.auth.firstName.value,\r\n            email: this.state.auth.email.value,\r\n            password: this.state.auth.password.value\r\n        }\r\n        this.props.onSignUp(signUpData)\r\n\r\n    }\r\n\r\n    componentDidMount () {\r\n   \r\n    }\r\n\r\n\r\n\r\n    render() {\r\n        const updatedForm = [];\r\n\r\n        for (let key in this.state.auth) {\r\n            updatedForm.push({\r\n                id: key,\r\n                config: this.state.auth[key]\r\n            })\r\n        }\r\n\r\n        const form = updatedForm.map(formElement => {\r\n            return <Input\r\n                key = {formElement.id}\r\n                changed={(event) => this.inputHandler(event, formElement.id)}\r\n                elementType={formElement.config.elementType}\r\n                label={formElement.config.label}\r\n                elementConfig={formElement.config.elementConfig}\r\n                touched={formElement.config.touched}\r\n                value={formElement.config.value}\r\n                isValid = {!formElement.config.valid}\r\n                shoudBeValidate={formElement.config.validation}\r\n                valueType = {formElement.id}\r\n\r\n            />\r\n\r\n        })\r\n\r\n        let redirecting = null\r\n\r\n        if(this.state.isAuth || this.props.isAuth) {\r\n         this.props.history.push('/dashboard')\r\n        }\r\n        return <div className={classes.signIn}>\r\n  \r\n            <NavBar />\r\n  \r\n            <form onSubmit={this.onSignUpHandler}>\r\n            {redirecting}\r\n                <p className = {classes.signInText}>Sign Up</p>\r\n                {form}\r\n                <p className={classes.errorHandler}>{this.props.onError}</p>\r\n                <Button className={classes.signInBtn}>Sign Up</Button>\r\n                <p className={classes.switcher} onClick={this.props.onSwitch}>Alredy have an account? Click here to Login!</p>\r\n            </form>\r\n        </div>\r\n    }\r\n\r\n}\r\n\r\nconst mapStateToProps = state => {\r\n    return {\r\n        isAuth: state.auth.token,\r\n        onError: state.auth.error\r\n    }\r\n}\r\n\r\nconst mapDispatchToProps = dispatch => {\r\n    return {\r\n        onSignUp: (signUpData) => dispatch(action.signUp(signUpData))\r\n    }\r\n}\r\n\r\nexport default withRouter(connect(mapStateToProps, mapDispatchToProps)(SignUp))","import classes from './Authorization.module.scss'\r\nimport React from 'react'\r\nimport authorizationImg from '../../assets/images/authorization.svg'\r\nimport LogIn from './LogIn/LogIn'\r\nimport SignUp from './SignUp/SignUp'\r\nimport NavBar from '../../components/UI/Nav/Nav'\r\n\r\n\r\nclass Authorization extends React.Component {\r\n    constructor(props) {\r\n        super()\r\n        this.state = {\r\n            switchlog: false\r\n        }\r\n    }\r\n\r\n    switchLogger = () => {\r\n        this.setState(prevState => {\r\n            return {\r\n                switchLog: !prevState.switchLog\r\n            }\r\n        })\r\n    }\r\n\r\n\r\n\r\n    render() {\r\n        let auth = null\r\n        if (this.state.switchLog) {\r\n            auth = <SignUp onSwitch={this.switchLogger} />\r\n        }\r\n\r\n        else {\r\n            auth = <LogIn onSwitch={this.switchLogger} />\r\n        }\r\n        return (\r\n            <>\r\n                <NavBar />\r\n                <section className={classes.authorization}>\r\n                    <div className={classes.imageBox}>\r\n                        <img className={classes.authImg} src={authorizationImg} alt='' />\r\n                    </div>\r\n\r\n                    <div className={classes.authForm}>\r\n                        {auth}\r\n                    </div>\r\n                </section>\r\n            </>\r\n        )\r\n\r\n\r\n\r\n    }\r\n\r\n}\r\n\r\nexport default Authorization;","\r\nimport React from 'react'\r\nimport classes from './Card.module.scss'\r\nimport cardImg from '../../../assets/images/articleImg.jpg'\r\nimport user from '../../../assets/images/user.svg'\r\nimport * as action from '../../../store/action/index'\r\nimport { connect } from 'react-redux'\r\nimport { Link } from 'react-router-dom'\r\n\r\n\r\n\r\n\r\nclass Card extends React.Component {\r\n\r\n\r\n    render() {\r\n\r\n\r\n\r\n\r\n\r\n        let photo = cardImg\r\n        if (this.props.postData.photo && this.props.postData.photo.includes('http')) {\r\n            photo = this.props.postData.photo\r\n        }\r\n\r\n        return (\r\n            <article className={classes.card}>\r\n                <div className={classes.imgBox}>\r\n                    <img src={photo} alt='' />\r\n                </div>\r\n\r\n                <div className={classes.infoBox}>\r\n                    <div className={classes.textBox}>\r\n                        <h1>{this.props.postData.title}</h1>\r\n                        <p> {\r\n                            this.props.postData.subTitle}\r\n                        </p>\r\n                        <Link to = {`/post/${this.props.postData.id}`}>\r\n                        <span className={classes.readMore}>Read more</span> \r\n                        </Link>\r\n                    </div>\r\n\r\n                    <div className={classes.profileImgBox}>\r\n                        <img src={user} alt='' />\r\n                        <span>Lazar Spasic</span>\r\n                    </div>\r\n\r\n\r\n\r\n\r\n                </div>\r\n\r\n\r\n            </article>\r\n\r\n\r\n        )\r\n\r\n    }\r\n}\r\n\r\nconst mapStateToProps = state => {\r\n    return {\r\n        isAuth: state.auth.token\r\n    }\r\n}\r\n\r\n\r\n\r\n\r\n\r\nexport default connect(mapStateToProps, null)(Card)","import classes from './Posts.module.scss';\r\nimport React from 'react'\r\nimport Card from '../../components/UI/Card/Card'\r\nimport NavBar from '../../components/UI/Nav/Nav';\r\nimport * as action from '../../store/action/index'\r\nimport { connect } from 'react-redux'\r\n\r\nclass Posts extends React.Component {\r\n    constructor(props) {\r\n        super()\r\n        this.state = {\r\n            posts: null\r\n        }\r\n    }\r\n\r\n    componentDidMount() {\r\n        this.props.fetchPosts()\r\n\r\n \r\n        \r\n\r\n\r\n    }\r\n\r\n\r\n\r\n    render() {\r\n \r\n\r\n\r\n        return (\r\n            <>\r\n\r\n                <section >\r\n                    <header>\r\n                        <h1 className={classes.title}>Trending Posts</h1>\r\n                        <NavBar />\r\n                    </header>\r\n\r\n                    <main className={classes.articleContainer}>\r\n           {this.props.fetchedPosts.map(post => <Card key = {post.id} postData = {post}/>)}\r\n                    </main>\r\n\r\n                </section>\r\n\r\n            </>\r\n        )\r\n    }\r\n}\r\n\r\nconst mapStateToProps = state => {\r\n    return {\r\n        fetchedPosts: state.post.allPosts\r\n    }\r\n}\r\n\r\nconst mapDispatchToProps = dispatch => {\r\n    return {\r\n        fetchPosts: () => dispatch(action.onFetchPosts())\r\n    }\r\n}\r\n\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(Posts);","import * as actionTypes from '../actionTypes'\r\nimport axios from '../../../services/axios'\r\nimport Post from '../../../models/Post'\r\n\r\nconst fetchPostSuccess = (posts) => {\r\n    return {\r\n        type: actionTypes.FETCH_POSTS_SUCCESS,\r\n        posts: posts,\r\n        loading: false\r\n    }\r\n}\r\nconst fetchPostsStart = () => {\r\n    return {\r\n        type: actionTypes.FETCH_POSTS_START,\r\n        loading: true\r\n    }\r\n}\r\nconst fetchPostsFail = (error) => {\r\n    return {\r\n        type: actionTypes.FETCH_POSTS_START,\r\n        error: error,\r\n        loading: false\r\n    }\r\n}\r\n\r\nexport const onFetchPosts = () => {\r\n    return dispatch => {\r\n        dispatch(fetchPostsStart())\r\n        axios.get('posts')\r\n            .then(res => {\r\n                const results = res.data.map(post => new Post(post))\r\n                dispatch(fetchPostSuccess(results))\r\n\r\n            })\r\n            .catch(err => {\r\n                dispatch(fetchPostsFail(err))\r\n            })\r\n\r\n    }\r\n}\r\n\r\n\r\nexport const newPostSucces = () => {\r\n    return {\r\n        type: actionTypes.NEW_POST_SUCCESS,\r\n        loading: false,\r\n    }\r\n}\r\nexport const newPostFail = (error) => {\r\n    return {\r\n        type: actionTypes.NEW_POST_FAIL,\r\n        loading: false,\r\n        error: error\r\n    }\r\n}\r\n\r\nexport const newPostStart = () => {\r\n    return {\r\n        type: actionTypes.NEW_POST_START,\r\n        loading: true\r\n    }\r\n}\r\n\r\nexport const newPost = (postData) => {\r\n    return dispatch => {\r\n        dispatch(newPostStart())\r\n\r\n        axios.post('posts', postData)\r\n\r\n            .then(res => {\r\n                console.log(res.data)\r\n                dispatch(newPostSucces())\r\n\r\n            })\r\n            .catch(error => {\r\n                dispatch(newPostFail(error))\r\n            })\r\n    }\r\n}\r\n\r\n\r\nexport const favouritePost = (postId, favourite) => {\r\n\r\n\r\n    return {\r\n        type: actionTypes.FAVOURITE_POSTS,\r\n        postId: postId,\r\n        favourite: favourite\r\n    }\r\n}\r\n\r\n\r\nexport const fetchMyPosts = (myPosts) => {\r\n    return {\r\n        type: actionTypes.FETCH_MYPOSTS_SUCCESS,\r\n        myPosts\r\n    }\r\n}\r\n\r\nexport const fetchMyPostsStart = () => {\r\n    return {\r\n        type: actionTypes.FETCH_MYPOSTS_START,\r\n        loading: true\r\n    }\r\n}\r\nexport const fetchMyPostsFail = (error) => {\r\n    return {\r\n        type: actionTypes.FETCH_MYPOSTS_FAIL,\r\n        loading: false,\r\n        error\r\n    }\r\n}\r\n\r\nexport const getMyPost = () => {\r\n    return dispatch => {\r\n        const id = localStorage.getItem('userId')\r\n        if (id) {\r\n            axios.get(`users/${id}/posts`)\r\n                .then(res => {\r\n                    dispatch(fetchMyPostsStart())\r\n                    dispatch(fetchMyPosts(res.data.map(post => new Post(post))))\r\n                })\r\n\r\n                .catch(error => {\r\n                    dispatch(fetchMyPostsFail(error))\r\n                 \r\n                })\r\n        }\r\n    }\r\n}\r\n\r\n\r\nexport const editPost = (id, data) => {\r\n    return dispatch => {\r\n        axios.put(`posts/${id}`, data)\r\n            .then(res =>\r\n                console.log(res))\r\n            .catch(err => console.log(err.response))\r\n    }\r\n\r\n}\r\n\r\nexport const deletePost = (id, data) => {\r\n    return dispatch => {\r\n        axios.delete(`posts/${id}`, data)\r\n            .then(res => console.log(res))\r\n            .catch(err => console.log(err.response))\r\n    }\r\n\r\n}\r\n\r\n\r\n\r\nexport const getSinglePostStart = () => {\r\n    return {\r\n        type: actionTypes.FETCH_SINGLE_POST_START,\r\n        loading: true\r\n    }\r\n\r\n}\r\nexport const getSinglePostFail = (error) => {\r\n    return {\r\n        type: actionTypes.FETCH_SINGLE_POST_FAIL,\r\n        loading: false,\r\n        error: error\r\n    }\r\n\r\n}\r\nexport const getSinglePostSuccess = (post) => {\r\n    return {\r\n        type: actionTypes.FETCH_SINGLE_POST_SUCCESS,\r\n        post: post,\r\n        loading: false\r\n    }\r\n\r\n}\r\n\r\nexport const readPost = (id) => {\r\n    return dispatch => {\r\n        dispatch(getSinglePostStart())\r\n        axios(`posts/${id}`)\r\n\r\n            .then(res => {\r\n      \r\n                dispatch(getSinglePostSuccess(res.data))\r\n            })\r\n\r\n            .catch(err => {\r\n                dispatch(getSinglePostFail(err.response))\r\n            })\r\n    }\r\n}\r\n\r\n","import classes from './ReadPost.module.scss'\r\nimport React from 'react'\r\nimport { connect } from 'react-redux'\r\nimport * as action from '../../store/action/index'\r\nimport NavBar from '../../components/UI/Nav/Nav'\r\n\r\n\r\nclass ReadPost extends React.Component {\r\n\r\n\r\n\r\n\r\n    componentDidMount() {\r\n        let id = this.props.match.params.id\r\n        this.props.onReadPost(id)\r\n\r\n    }\r\n\r\n    render() {\r\n\r\n        return <>\r\n            <article className={classes.readPost}>\r\n            <NavBar />\r\n\r\n                <h1>{this.props.postData.title}</h1>\r\n                <h3>{this.props.postData.subtitle}</h3>\r\n                <p>{this.props.postData.text}</p>\r\n\r\n            </article>\r\n\r\n\r\n        </>\r\n    }\r\n}\r\n\r\nconst mapStateToProps = state => {\r\n    return {\r\n        postData: state.post.singlePost\r\n    }\r\n}\r\n\r\nconst mapDispatchToProps = dispatch => {\r\n    return {\r\n        onReadPost: (id) => dispatch(action.readPost(id))\r\n    }\r\n\r\n}\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(ReadPost)","import NavBar from '../../UI/Nav/Nav'\r\nimport React from 'react'\r\nimport classes from './OurStory.module.scss'\r\n\r\n\r\n\r\n\r\nconst OurStory = () => {\r\n\r\n    return <>\r\n    <NavBar />\r\n    <h1>Our Story page is in progress...</h1>\r\n    <p className = {classes.ourStory}>\r\n        Contrary to popular belief, Lorem Ipsum is not simply random text. It has roots in a piece of classical Latin literature from 45 BC, making it over 2000 years old. Richard McClintock, a Latin professor at Hampden-Sydney College in Virginia, looked up one of the more obscure Latin words, consectetur, from a Lorem Ipsum passage, and going through the cites of the word in classical literature, discovered the undoubtable source. Lorem Ipsum comes from sections 1.10.32 and 1.10.33 of \"de Finibus Bonorum et Malorum\" (The Extremes of Good and Evil) by Cicero, written in 45 BC. This book is a treatise on the theory of ethics, very popular during the Renaissance. The first line of Lorem Ipsum, \"Lorem ipsum dolor sit amet..\", comes from a line in section 1.10.32.\r\n\r\nThe standard chunk of Lorem Ipsum used since the 1500s is reproduced below for those interested. Sections 1.10.32 and 1.10.33 from \"de Finibus Bonorum et Malorum\" by Cicero are also reproduced in their exact original form, accompanied by English versions from the 1914 translation by H. Rackham.\r\n    </p>\r\n\r\n    </>\r\n}\r\n\r\nexport default OurStory","import React from 'react'\r\nimport Header from '../components/Layout/Header/Header';\r\nimport { Route, Switch } from 'react-router-dom'\r\nimport Authorization from './Authorization/Authorization';\r\nimport Posts from './Posts/Posts';\r\nimport ReadPost from './ReadPost/ReadPost';\r\nimport OurStory from '../components/Layout/OurStory/OurStory';\r\n\r\n\r\nclass PublicMain extends React.Component {\r\n\r\n\r\n    render() {\r\n        return <>\r\n            <Switch>\r\n                <Route exact path='/' component={Header} />\r\n                {/*         <Route  path = '/' component = {Footer} /> */}\r\n             \r\n                <Route exact path='/posts' component={Posts} />\r\n                <Route exact path='/authorization' component={Authorization} />\r\n                <Route exact path='/post/:id' component={ReadPost} />\r\n                <Route exact path='/our-story' component={OurStory} />\r\n            </Switch>\r\n\r\n        </>\r\n    }\r\n}\r\n\r\nexport default PublicMain;","import classes from './SideBar.module.scss'\r\nimport React from 'react'\r\nimport addPost from '../../../assets/images/addPost.svg'\r\nimport bloggerLogo from '../../../assets/images/bloggerLogo.svg'\r\nimport heart from '../../../assets/images/heart.svg'\r\nimport myArticles from '../../../assets/images/myArticles.svg'\r\nimport discover from '../../../assets/images/discover.svg'\r\nimport dashboard from '../../../assets/images/dashboard.svg'\r\nimport logout from '../../../assets/images/logout.svg'\r\nimport { Link } from 'react-router-dom'\r\n\r\n\r\nconst SideBar = (props) => {\r\n\r\n    let vh = window.innerHeight\r\n\r\n    return (\r\n        <>\r\n            <aside style = {{height: vh}} className={classes.sideBar}>\r\n\r\n\r\n                <div className={classes.logoBox}>\r\n                    <img src={bloggerLogo} alt='' />\r\n                    <p>Blogger</p>\r\n                </div>\r\n\r\n                <div className={classes.menuContainer}>\r\n                    <Link className={classes.navLink} to='/new-post'>\r\n                        <div className={classes.iconBox}>\r\n                            <img src={addPost} />\r\n                            <p>New Article</p>\r\n                        </div>\r\n                    </Link>\r\n\r\n                    <Link className={classes.navLink} to='/my-posts' >\r\n                        <div className={classes.iconBox}>\r\n                            <img src={myArticles} />\r\n                            <p>My Articles</p>\r\n                        </div>\r\n                    </Link>\r\n                    <Link className={classes.navLink} to='/posts'>\r\n                        <div className={classes.iconBox}>\r\n                            <img src={discover} />\r\n                            <p>Discover</p>\r\n                        </div>\r\n                    </Link>\r\n\r\n                {/*     <Link className={classes.navLink} to='/dashboard'>\r\n                        <div className={classes.iconBox}>\r\n                            <img src={dashboard} />\r\n                            <p>Dashboard</p>\r\n                        </div>\r\n                    </Link> */}\r\n\r\n                    <Link className={classes.navLink} to='/logout'>\r\n                        <div className={classes.iconBox}>\r\n                            <img src={logout} />\r\n                            <p>Logout</p>\r\n                        </div>\r\n                    </Link>\r\n    \r\n                </div>\r\n\r\n\r\n\r\n\r\n\r\n            </aside>\r\n\r\n        </>\r\n    )\r\n\r\n}\r\nexport default SideBar","import classes from './DashBoard.module.scss'\r\nimport React from 'react'\r\nimport Nav from '../../components/UI/Nav/Nav'\r\nimport Sidebar from '../../components/Layout/Sidebar/SideBar'\r\n\r\nclass DashBoard extends React.Component {\r\n\r\n    render() {\r\n\r\n\r\n        return (\r\n            <>\r\n                <section className ={classes.mainWrapper}>\r\n                    <Nav />\r\n                    <Sidebar />\r\n\r\n                    <main >\r\n                        {this.props.children}\r\n                    </main>\r\n                </section>\r\n\r\n            </>\r\n        )\r\n    }\r\n}\r\n\r\nexport default DashBoard","import React from 'react'\r\nimport Input from '../../../components/UI/Input/Input'\r\nimport Button from '../../../components/UI/Button/Button'\r\nimport classes from './NewPost.module.scss'\r\nimport Switcher from '../../../components/UI/Switcher/Switcher'\r\nimport * as action from '../../../store/action/index'\r\nimport {connect} from 'react-redux'\r\nclass NewPost extends React.Component {\r\n\r\n    constructor(props) {\r\n        super()\r\n        this.state = {\r\n            newPostForm: {\r\n                title: {\r\n                    elementType: 'input',\r\n                    elementConfig: {\r\n                        type: 'text',\r\n                        placeholder: 'Post Title'\r\n                    },\r\n                    value: '',\r\n                    validation: {\r\n                        required: true\r\n                    },\r\n                    valid: false,\r\n                    touched: false,\r\n\r\n                },\r\n                subTitle: {\r\n                    elementType: 'input',\r\n                    elementConfig: {\r\n                        type: 'text',\r\n                        placeholder: 'Post Subtitle'\r\n                    },\r\n                    value: '',\r\n                    validation: {\r\n                        required: true\r\n                    },\r\n                    valid: false,\r\n                    touched: false\r\n\r\n                },\r\n                image: {\r\n                    elementType: 'input',\r\n                    elementConfig: {\r\n                        type: 'text',\r\n                        placeholder: 'Input URL of image'\r\n                    },\r\n                    value: '',\r\n                    validation: {\r\n                        required: true\r\n                    },\r\n                    valid: false,\r\n                    touched: false\r\n\r\n                },\r\n                text: {\r\n                    elementType: 'textarea',\r\n                    elementConfig: {\r\n                        type: 'textarea',\r\n                        placeholder: 'This is place for your new post!'\r\n                    },\r\n                    value: '',\r\n                    validation: {\r\n                        required: true\r\n                    },\r\n                    valid: false,\r\n                    touched: false\r\n                }\r\n\r\n            },\r\n            isPublic: true,\r\n            formIsValid: false\r\n\r\n        }\r\n\r\n    }\r\n    inputHandler = (event, inputIdentifier) => {\r\n\r\n        const updatedNewPostForm = {\r\n            ...this.state.newPostForm,\r\n            [inputIdentifier]: {\r\n                ...this.state.newPostForm[inputIdentifier],\r\n                touched: true,\r\n                valid: this.checkValidity(inputIdentifier, event.target.value),\r\n                value: event.target.value\r\n            }\r\n        }\r\n\r\n        let formIsValid = true;\r\n\r\n        for(let key in updatedNewPostForm) {\r\n            formIsValid = updatedNewPostForm[key].valid && true\r\n        }\r\n\r\n\r\n        this.setState({newPostForm: updatedNewPostForm, formIsValid: formIsValid})\r\n\r\n    \r\n\r\n    }\r\n\r\n    checkValidity = (inputIdentifier, value) => {\r\n        let isValid = true\r\n        if(inputIdentifier === 'title') {\r\n            isValid = value.length > 10 && isValid\r\n        }\r\n\r\n        if(inputIdentifier === 'subTitle') {\r\n            isValid = value.length > 5 && isValid\r\n        }\r\n\r\n        if(inputIdentifier === 'image') {\r\n            isValid = (value.includes('.jpg') || value.includes('.png') \r\n            || value.includes('.jpeg') || value.includes('.gif')) && isValid\r\n        }\r\n\r\n        if(inputIdentifier === 'text') {\r\n            isValid = value.trim().length > 40 && isValid\r\n        }\r\n\r\n        return isValid\r\n\r\n    }\r\n\r\n    isPublic () {\r\n        this.setState(prevState => {\r\n            return {\r\n                isPublic: !prevState.isPublic\r\n            }\r\n        })\r\n    }\r\n\r\n    onSubmitForm = (event) =>{\r\n        event.preventDefault()\r\n\r\n        const postData = {\r\n            title: this.state.newPostForm.title.value,\r\n            subtitle: this.state.newPostForm.subTitle.value,\r\n            imageUrl: this.state.newPostForm.image.value,\r\n            text: this.state.newPostForm.text.value,\r\n            isPublic: this.state.isPublic\r\n        }\r\n        this.props.sendNewPost(postData)\r\n\r\n        this.props.history.push('/my-posts')\r\n       \r\n    }\r\n\r\n    render() {\r\n\r\n        const updatedForm = []\r\n        for (let key in this.state.newPostForm) {\r\n            updatedForm.push({\r\n                id: key,\r\n                config: this.state.newPostForm[key]\r\n            })\r\n\r\n        }\r\n        const newPost = updatedForm.map(newPostElement => {\r\n            return <Input\r\n                key={newPostElement.id}\r\n                elementType={newPostElement.config.elementType}\r\n                elementConfig={newPostElement.config.elementConfig}\r\n                value={newPostElement.config.value}\r\n                isValid={!newPostElement.config.valid}\r\n                touched={newPostElement.config.touched}\r\n                valueType={newPostElement.id}\r\n                changed={(event) => this.inputHandler(event, newPostElement.id)}\r\n            />\r\n\r\n        })\r\n\r\n\r\n        return (\r\n            <>\r\n             \r\n                <div className={classes.newPostForm}>\r\n                <h1 className = {classes.header}>New Post</h1>\r\n           {/*      <Switcher oN={'Public'} oF={'Private'} clicked={this.isPublic} />  */}\r\n                    <form className={classes.formInput} onSubmit={this.onSubmitForm}>\r\n                        {newPost}\r\n                        <div className = {classes.btnContainer}>\r\n                                  <Button  disabled={!this.state.formIsValid} clicked={this.onSubmitForm}>Save Post</Button>\r\n                        </div>\r\n                  \r\n                    </form>\r\n                </div>\r\n            </>\r\n        )\r\n    }\r\n\r\n}\r\n\r\n\r\nconst mapDispatchToProps = dispatch => {\r\n    return {\r\n        sendNewPost: (postData) => dispatch(action.newPost(postData))\r\n    }\r\n}\r\nexport default connect(null, mapDispatchToProps)(NewPost)","import React from 'react'\r\nimport {Redirect} from 'react-router-dom'\r\nimport {connect} from 'react-redux'\r\nimport * as action from '../../../store/action/index'\r\n\r\n\r\nclass Logout extends React.Component {\r\n\r\n\r\n    componentDidMount () {\r\n        this.props.onLogout()\r\n    }\r\n\r\n    render() {\r\n\r\n        return <Redirect to ='/' />\r\n\r\n    }\r\n}\r\n\r\nconst mapDispatchToProps = dispatch => {\r\n    return {\r\n        onLogout: () => (dispatch(action.logout()))\r\n    }\r\n}\r\nexport default connect(null, mapDispatchToProps)(Logout)","import classes from './MyPostItem.module.scss'\r\nimport React from 'react'\r\nimport edit from '../../../../assets/images/edit.svg'\r\nimport { Link } from 'react-router-dom'\r\n\r\nclass MyPostItem extends React.Component {\r\n\r\n    render() {\r\n        console.log(this.props.postData)\r\n        return (\r\n            <>\r\n                <div className = {classes.myposts}>\r\n\r\n\r\n                    <article className={classes.postItem}>\r\n                        <div className={classes.title}>\r\n                            <p>{this.props.postData.title}</p>\r\n                        </div>\r\n                        <Link to={`/edit-post/${this.props.postData.id}`}>\r\n                            <div className={classes.editPost}>\r\n                                <img src={edit} />\r\n                            </div>\r\n                        </Link>\r\n                    </article>\r\n                </div>\r\n\r\n            </>\r\n        )\r\n    }\r\n}\r\n\r\nexport default MyPostItem","import React from 'react'\r\nimport MyPostItem from './MyPostItem/MyPostItem'\r\nimport { connect } from 'react-redux'\r\nimport * as action from '../../../store/action/index'\r\nimport classes from './MyPosts.module.scss'\r\nimport { Link } from 'react-router-dom'\r\n\r\nclass MyPosts extends React.Component {\r\n    constructor(props) {\r\n        super()\r\n        this.state = {\r\n\r\n        }\r\n    }\r\n\r\n    componentDidMount() {\r\n        this.props.getPosts()\r\n\r\n    }\r\n\r\n\r\n    render() {\r\n\r\n        const noPosts = <div className={classes.noPosts}>\r\n            <p className={classes.myPostInfo}>Currently you don't have any posts!</p>\r\n            <Link style = {{textDecoration: 'none'}} to='/new-post'>\r\n\r\n\r\n                <span>Click here ant start writing!</span>\r\n            </Link>\r\n        </div>\r\n        return <>\r\n            <section>\r\n                {this.props.myPosts.length > 0 ? this.props.myPosts.map(post => <MyPostItem postData={post} />) :\r\n                    noPosts\r\n                }\r\n            </section>\r\n\r\n        </>\r\n    }\r\n\r\n}\r\n\r\nconst mapStateToProps = state => {\r\n    return {\r\n        myPosts: state.post.myPosts\r\n    }\r\n}\r\n\r\nconst mapDispatchToProps = dispatch => {\r\n    return {\r\n        getPosts: () => dispatch(action.getMyPost())\r\n    }\r\n}\r\n\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(MyPosts)","import classes from './Modal.module.scss'\r\nimport React from 'react'\r\n\r\n\r\nconst Modal = (props) => {\r\n\r\n    const modal = <div className = {classes.modal}>\r\n        {props.children}\r\n    </div>\r\n\r\n    return props.show ? modal : null\r\n}\r\n\r\nexport default Modal","import classes from './EditPost.module.scss'\r\nimport React from 'react'\r\nimport axios from '../../../services/axios'\r\nimport Input from '../../../components/UI/Input/Input'\r\nimport Button from '../../../components/UI/Button/Button'\r\nimport { connect } from 'react-redux'\r\nimport * as action from '../../../store/action/index'\r\nimport Modal from '../../../components/UI/Modal/Modal'\r\n\r\nclass EditPost extends React.Component {\r\n    constructor(props) {\r\n        super()\r\n        this.state = {\r\n            editPostForm: {\r\n                title: {\r\n                    elementType: 'input',\r\n                    elementConfig: {\r\n                        type: 'text',\r\n                        placeholder: 'Post Title'\r\n                    },\r\n                    value: '',\r\n                    validation: {\r\n                        required: true\r\n                    },\r\n                    valid: false,\r\n                    touched: false,\r\n\r\n                },\r\n                subTitle: {\r\n                    elementType: 'input',\r\n                    elementConfig: {\r\n                        type: 'text',\r\n                        placeholder: 'Post Subtitle'\r\n                    },\r\n                    value: '',\r\n                    validation: {\r\n                        required: true\r\n                    },\r\n                    valid: false,\r\n                    touched: false\r\n\r\n                },\r\n                image: {\r\n                    elementType: 'input',\r\n                    elementConfig: {\r\n                        type: 'text',\r\n                        placeholder: 'Input URL of image'\r\n                    },\r\n                    value: '',\r\n                    validation: {\r\n                        required: true\r\n                    },\r\n                    valid: false,\r\n                    touched: false\r\n\r\n                },\r\n                text: {\r\n                    elementType: 'textarea',\r\n                    elementConfig: {\r\n                        type: 'textarea',\r\n                        placeholder: 'This is place for your new post!'\r\n                    },\r\n                    value: '',\r\n                    validation: {\r\n                        required: true\r\n                    },\r\n                    valid: false,\r\n                    touched: false\r\n                }\r\n\r\n            },\r\n            isPublic: true,\r\n            formIsValid: false,\r\n            showModal: false,\r\n        }\r\n    }\r\n\r\n    inputHandler = (event, inputIdentifier) => {\r\n\r\n        const updatedEditPostForm = {\r\n            ...this.state.editPostForm,\r\n            [inputIdentifier]: {\r\n                ...this.state.editPostForm[inputIdentifier],\r\n                touched: true,\r\n                valid: this.checkValidity(inputIdentifier, event.target.value),\r\n                value: event.target.value\r\n            }\r\n        }\r\n\r\n        let formIsValid = true;\r\n\r\n        for (let key in updatedEditPostForm) {\r\n            formIsValid = updatedEditPostForm[key].valid && true\r\n        }\r\n\r\n        this.setState({ editPostForm: updatedEditPostForm, formIsValid: formIsValid })\r\n\r\n\r\n    }\r\n\r\n    checkValidity = (inputIdentifier, value) => {\r\n        let isValid = true\r\n        if (inputIdentifier === 'title') {\r\n            isValid = value.length > 10 && isValid\r\n        }\r\n\r\n        if (inputIdentifier === 'subTitle') {\r\n            isValid = value.length > 5 && isValid\r\n        }\r\n\r\n        if (inputIdentifier === 'image') {\r\n            isValid = (value.includes('.jpg') || value.includes('.png')\r\n                || value.includes('.jpeg') || value.includes('.gif')) && isValid\r\n        }\r\n\r\n        if (inputIdentifier === 'text') {\r\n            isValid = value.trim().length > 40 && isValid\r\n        }\r\n\r\n        return isValid\r\n\r\n    }\r\n\r\n    isPublic() {\r\n        this.setState(prevState => {\r\n            return {\r\n                isPublic: !prevState.isPublic\r\n            }\r\n        })\r\n    }\r\n\r\n\r\n\r\n    componentDidMount() {\r\n        let id = this.props.match.params.id\r\n\r\n        axios(`/posts/${id}`)\r\n        .then(res => {\r\n            const results = res.data\r\n            const updatedEditPostForm = {\r\n                ...this.state.editPostForm,\r\n                title: {\r\n                    ...this.state.editPostForm['title'],\r\n                    value: results.title,\r\n                    valid: this.checkValidity('title', results.title)\r\n                },\r\n    \r\n                subTitle: {\r\n                    ...this.state.editPostForm['subTitle'],\r\n                    value: results.subtitle,\r\n                    valid: this.checkValidity('subTitle', results.subtitle)\r\n                },\r\n    \r\n                image: {\r\n                    ...this.state.editPostForm['image'],\r\n                    value: results.imageUrl,\r\n                    valid: this.checkValidity('image', results.imageUrl)\r\n                },\r\n    \r\n               text: {\r\n                   ...this.state.editPostForm['text'],\r\n                    value: results.text,\r\n                    valid: this.checkValidity('text', results.text)\r\n            } \r\n    \r\n            }\r\n\r\n     \r\n\r\n       \r\n            this.setState({\r\n                editPostForm: updatedEditPostForm,\r\n                sid: results.sid,\r\n         \r\n            })\r\n    \r\n        })   \r\n    }\r\n\r\n    updatePostHandler = () => {\r\n \r\n        let id = this.props.match.params.id\r\n\r\n        const data = {\r\n            title: this.state.editPostForm.title.value,\r\n            subtitle: this.state.editPostForm.subTitle.value,\r\n            imageUrl: this.state.editPostForm.image.value,\r\n            text: this.state.editPostForm.text.value,\r\n            sid: this.state.sid\r\n          \r\n\r\n        }\r\n\r\n        this.setState({\r\n            showModal: true\r\n        })\r\n    \r\n       \r\n        setTimeout(() => {\r\n            this.setState({\r\n                showModal: true\r\n            })\r\n              this.props.editPost(id, data)\r\n              this.props.history.push('/my-posts')\r\n        \r\n        }, 1000);\r\n\r\n      \r\n\r\n        \r\n    }\r\n\r\n\r\n    deletePostHandler = () => {\r\n        let id = this.props.match.params.id\r\n\r\n        const data = {\r\n            title: this.state.editPostForm.title.value,\r\n            subtitle: this.state.editPostForm.subTitle.value,\r\n            imageUrl: this.state.editPostForm.image.value,\r\n            text: this.state.editPostForm.text.value,\r\n            sid: this.state.sid\r\n          \r\n\r\n        }\r\n\r\n        this.setState({\r\n            showModal: true\r\n        })\r\n    \r\n       \r\n        setTimeout(() => {\r\n            this.setState({\r\n                showModal: true\r\n            })\r\n            this.props.deletePost(id, data)\r\n              this.props.history.push('/my-posts')\r\n        \r\n        }, 1500);\r\n\r\n\r\n\r\n\r\n    }\r\n\r\n\r\n    render() {\r\n\r\n    \r\n\r\n        const updatedForm = []\r\n        for (let key in this.state.editPostForm) {\r\n            updatedForm.push({\r\n                id: key,\r\n                config: this.state.editPostForm[key]\r\n            })\r\n\r\n        }\r\n        const editPost = updatedForm.map(newPostElement => {\r\n            return <Input\r\n                key={newPostElement.id}\r\n                elementType={newPostElement.config.elementType}\r\n                elementConfig={newPostElement.config.elementConfig}\r\n                value={newPostElement.config.value}\r\n                isValid={!newPostElement.config.valid}\r\n                touched={newPostElement.config.touched}\r\n                valueType={newPostElement.id}\r\n                changed={(event) => this.inputHandler(event, newPostElement.id)}\r\n            />\r\n\r\n        })\r\n\r\n\r\n        return (\r\n            <>\r\n          {this.state.showModal ? <Modal show = {true}><p>The post is succefully updated!</p></Modal> : null}\r\n                <div className={classes.editPostForm}>\r\n          \r\n                    <h1 className={classes.header}>Edit your post</h1>\r\n                    {/*      <Switcher oN={'Public'} oF={'Private'} clicked={this.isPublic} />  */}\r\n                    <form className={classes.formInput} onSubmit={this.onSubmitForm}>\r\n                        {editPost}\r\n                        <div className={classes.btnContainer}>\r\n                            <Button className = {classes.active} disabled={!this.state.formIsValid} clicked={this.updatePostHandler}>Update Post</Button>\r\n                            <Button className = {classes.active}  clicked={this.deletePostHandler}>Delte Post</Button>\r\n                        </div>\r\n\r\n                    </form>\r\n                </div>\r\n            </>\r\n        )\r\n    }\r\n}\r\n\r\nconst mapStateToProps = state => {\r\n    return {\r\n        singlePost: state.post.singlePost\r\n    }\r\n}\r\n\r\nconst mapDispatchToProps = dispatch => {\r\n    return {\r\n        editPost: (id, data) => dispatch(action.editPost(id, data)),\r\n        deletePost: (id, data) => dispatch(action.deletePost(id, data))\r\n    }\r\n}\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(EditPost)","import React from 'react'\r\nimport DashBoard from './DashBoard/DashBoard'\r\nimport { Redirect, Route, Switch } from 'react-router-dom'\r\nimport NewPost from './DashBoard/NewPost/NewPost'\r\nimport Authorization from './Authorization/Authorization';\r\nimport Logout from './Authorization/Logout/Logout';\r\nimport Posts from './Posts/Posts'\r\nimport MyPosts from './DashBoard/MyPosts/MyPosts';\r\nimport EditPost from './DashBoard/EditPost/EditPost';\r\nimport ReadPost from './ReadPost/ReadPost';\r\n\r\nclass PrivateMain extends React.Component {\r\n\r\n\r\n    render() {\r\n        return <>\r\n\r\n\r\n\r\n\r\n\r\n\r\n            <DashBoard>\r\n\r\n                <Switch>\r\n                    <Route  path='/new-post' component={NewPost} />\r\n                    <Route path='/authorization' component={Authorization} />\r\n                    <Route path='/logout' component={Logout} />\r\n                    <Route path='/posts' component={Posts} />\r\n                    <Route path='/my-posts' component={MyPosts} />\r\n                    <Route path='/edit-post/:id' component={EditPost} />\r\n                    <Route path='/post/:id' component={ReadPost} />\r\n                    <Redirect to='/' />\r\n                </Switch>\r\n            </DashBoard>\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n        </>\r\n    }\r\n}\r\n\r\nexport default PrivateMain;","import React, { Component } from 'react';\r\nimport PublicMain from './containers/PublicMain';\r\nimport PrivateMain from './containers/PrivateMain';\r\nimport { connect } from 'react-redux'\r\nimport * as action from './store/action/index'\r\nimport { Redirect } from 'react-router-dom';\r\n\r\nclass App extends React.Component {\r\n\r\n\r\n\r\n  componentDidMount () {\r\n    this.props.authCheck()\r\n  }\r\n\r\n  render() {\r\n    let routes = <PublicMain />\r\n\r\n    if (this.props.isAuth) {\r\n      routes = <PrivateMain />\r\n\r\n    }\r\n    return (<>\r\n\r\n\r\n      {routes}\r\n\r\n    </>)\r\n  }\r\n}\r\n\r\n\r\nconst mapStateToProps = state => {\r\n  return {\r\n    isAuth: state.auth.token\r\n  }\r\n}\r\n\r\nconst mapDispatchToProps = dispatch => {\r\n  return {\r\n    authCheck: () => (dispatch(action.checkAuth()))\r\n}\r\n}\r\nexport default connect(mapStateToProps, mapDispatchToProps)(App);\r\n","// This optional code is used to register a service worker.\r\n// register() is not called by default.\r\n\r\n// This lets the app load faster on subsequent visits in production, and gives\r\n// it offline capabilities. However, it also means that developers (and users)\r\n// will only see deployed updates on subsequent visits to a page, after all the\r\n// existing tabs open on the page have been closed, since previously cached\r\n// resources are updated in the background.\r\n\r\n// To learn more about the benefits of this model and instructions on how to\r\n// opt-in, read https://bit.ly/CRA-PWA\r\n\r\nconst isLocalhost = Boolean(\r\n  window.location.hostname === 'localhost' ||\r\n    // [::1] is the IPv6 localhost address.\r\n    window.location.hostname === '[::1]' ||\r\n    // 127.0.0.0/8 are considered localhost for IPv4.\r\n    window.location.hostname.match(\r\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\r\n    )\r\n);\r\n\r\nexport function register(config) {\r\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\r\n    // The URL constructor is available in all browsers that support SW.\r\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\r\n    if (publicUrl.origin !== window.location.origin) {\r\n      // Our service worker won't work if PUBLIC_URL is on a different origin\r\n      // from what our page is served on. This might happen if a CDN is used to\r\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\r\n      return;\r\n    }\r\n\r\n    window.addEventListener('load', () => {\r\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\r\n\r\n      if (isLocalhost) {\r\n        // This is running on localhost. Let's check if a service worker still exists or not.\r\n        checkValidServiceWorker(swUrl, config);\r\n\r\n        // Add some additional logging to localhost, pointing developers to the\r\n        // service worker/PWA documentation.\r\n        navigator.serviceWorker.ready.then(() => {\r\n          console.log(\r\n            'This web app is being served cache-first by a service ' +\r\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\r\n          );\r\n        });\r\n      } else {\r\n        // Is not localhost. Just register service worker\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    });\r\n  }\r\n}\r\n\r\nfunction registerValidSW(swUrl, config) {\r\n  navigator.serviceWorker\r\n    .register(swUrl)\r\n    .then(registration => {\r\n      registration.onupdatefound = () => {\r\n        const installingWorker = registration.installing;\r\n        if (installingWorker == null) {\r\n          return;\r\n        }\r\n        installingWorker.onstatechange = () => {\r\n          if (installingWorker.state === 'installed') {\r\n            if (navigator.serviceWorker.controller) {\r\n              // At this point, the updated precached content has been fetched,\r\n              // but the previous service worker will still serve the older\r\n              // content until all client tabs are closed.\r\n              console.log(\r\n                'New content is available and will be used when all ' +\r\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\r\n              );\r\n\r\n              // Execute callback\r\n              if (config && config.onUpdate) {\r\n                config.onUpdate(registration);\r\n              }\r\n            } else {\r\n              // At this point, everything has been precached.\r\n              // It's the perfect time to display a\r\n              // \"Content is cached for offline use.\" message.\r\n              console.log('Content is cached for offline use.');\r\n\r\n              // Execute callback\r\n              if (config && config.onSuccess) {\r\n                config.onSuccess(registration);\r\n              }\r\n            }\r\n          }\r\n        };\r\n      };\r\n    })\r\n    .catch(error => {\r\n      console.error('Error during service worker registration:', error);\r\n    });\r\n}\r\n\r\nfunction checkValidServiceWorker(swUrl, config) {\r\n  // Check if the service worker can be found. If it can't reload the page.\r\n  fetch(swUrl, {\r\n    headers: { 'Service-Worker': 'script' },\r\n  })\r\n    .then(response => {\r\n      // Ensure service worker exists, and that we really are getting a JS file.\r\n      const contentType = response.headers.get('content-type');\r\n      if (\r\n        response.status === 404 ||\r\n        (contentType != null && contentType.indexOf('javascript') === -1)\r\n      ) {\r\n        // No service worker found. Probably a different app. Reload the page.\r\n        navigator.serviceWorker.ready.then(registration => {\r\n          registration.unregister().then(() => {\r\n            window.location.reload();\r\n          });\r\n        });\r\n      } else {\r\n        // Service worker found. Proceed as normal.\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    })\r\n    .catch(() => {\r\n      console.log(\r\n        'No internet connection found. App is running in offline mode.'\r\n      );\r\n    });\r\n}\r\n\r\nexport function unregister() {\r\n  if ('serviceWorker' in navigator) {\r\n    navigator.serviceWorker.ready\r\n      .then(registration => {\r\n        registration.unregister();\r\n      })\r\n      .catch(error => {\r\n        console.error(error.message);\r\n      });\r\n  }\r\n}\r\n","import * as actionTypes from '../action/actionTypes'\r\nimport Post from '../../models/Post'\r\n\r\nconst initialState = {\r\n    allPosts: [],\r\n    updatedPosts: [],\r\n    favouritePosts: [],\r\n    myPosts: [],\r\n    singlePost: {},\r\n    loading: false,\r\n    error: null,\r\n}\r\n\r\nconst reducer = (state = initialState, action) => {\r\n    switch (action.type) {\r\n        case actionTypes.FETCH_POSTS_START:\r\n            return {\r\n                ...state,\r\n                loading: action.loading\r\n            }\r\n\r\n\r\n\r\n        case actionTypes.FETCH_POSTS_SUCCESS:\r\n            return {\r\n                ...state,\r\n                allPosts: action.posts,\r\n                loading: action.loading,\r\n\r\n            }\r\n        case actionTypes.FETCH_POSTS_FAIL:\r\n            return {\r\n                ...state,\r\n                error: action.error,\r\n                loading: action.loading,\r\n\r\n            }\r\n\r\n        case actionTypes.FETCH_POSTS_START:\r\n            return {\r\n                ...state,\r\n                loading: action.loading\r\n            }\r\n        case actionTypes.FETCH_MYPOSTS_SUCCESS:\r\n            return {\r\n                ...state,\r\n                loading: action.loading,\r\n                myPosts: action.myPosts\r\n            }\r\n        case actionTypes.FETCH_MYPOSTS_FAIL:\r\n            return {\r\n                ...state,\r\n                loading: action.loading,\r\n                error: action.error\r\n            }\r\n\r\n        case actionTypes.FETCH_SINGLE_POST_SUCCESS:\r\n            return {\r\n                ...state,\r\n                loading: action.loading,\r\n                singlePost: action.post,\r\n            }\r\n\r\n        case actionTypes.FETCH_SINGLE_POST_FAIL:\r\n            return {\r\n                ...state,\r\n                loading: false,\r\n                error: action.error\r\n            }\r\n\r\n  \r\n\r\n  \r\n\r\n\r\n\r\n        default:\r\n            return state\r\n\r\n    }\r\n\r\n}\r\n\r\nexport default reducer","import * as actionTypes from '../action/actionTypes'\r\n\r\nconst initialState = {\r\n    token: null,\r\n    loading: false,\r\n    error: null\r\n}\r\n\r\n\r\nconst reducer = (state = initialState, action) => {\r\n    switch (action.type) {\r\n        case actionTypes.LOGIN_START:\r\n            return {\r\n                ...state,\r\n                loading: true\r\n            }\r\n        case actionTypes.LOGIN_SUCCESS:\r\n            return {\r\n                ...state,\r\n                token: action.token,\r\n                loading: false\r\n\r\n            }\r\n        case actionTypes.LOGIN_FAIL:\r\n            return {\r\n                ...state,\r\n                error: action.error,\r\n                loading: false\r\n            }\r\n        case actionTypes.SIGNUP_START:\r\n            return {\r\n                ...state,\r\n                loading: true,\r\n            }\r\n        case actionTypes.SIGNUP_FAIL:\r\n            return {\r\n                ...state,\r\n                error: action.error,\r\n                loading: false\r\n            }\r\n        case actionTypes.SIGNUP_SUCCESS: {\r\n            return {\r\n                ...state,\r\n                loading: false,\r\n                token: action.token\r\n              \r\n            }\r\n            \r\n        }\r\n        case actionTypes.AUTH_LOGOUT: {\r\n         \r\n            return {\r\n                ...state,\r\n                token: null\r\n                \r\n            }\r\n            \r\n        }\r\n        default:\r\n            return state;\r\n\r\n    }\r\n\r\n\r\n}\r\n\r\nexport default reducer","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport './index.css';\r\nimport App from './App';\r\nimport * as serviceWorker from './serviceWorker';\r\nimport { HashRouter } from 'react-router-dom';\r\nimport { createStore, applyMiddleware, compose, combineReducers } from 'redux'\r\nimport { Provider } from 'react-redux'\r\nimport thunk from 'redux-thunk'\r\nimport postReducer from './store/reducers/post'\r\nimport authReducer from './store/reducers/auth'\r\n\r\n\r\nconst composeEnhancers = window.__REDUX_DEVTOOLS_EXTENSION_COMPOSE__ || compose;\r\n\r\nconst rootReducer = combineReducers({\r\n  post: postReducer,\r\n  auth: authReducer\r\n})\r\n\r\nconst store = createStore(rootReducer, composeEnhancers(applyMiddleware(thunk)))\r\n\r\nReactDOM.render(\r\n  <Provider store = {store}>\r\n      <HashRouter>\r\n        <App/>\r\n      </HashRouter>\r\n  </Provider>,\r\n    document.getElementById('root')\r\n  );\r\n\r\n// If you want your app to work offline and load faster, you can change\r\n// unregister() to register() below. Note this comes with some pitfalls.\r\n// Learn more about service workers: https://bit.ly/CRA-PWA\r\nserviceWorker.unregister();\r\n"],"sourceRoot":""}